[{"/Users/mac/Documents/projects/Bejamas/src/index.js":"1","/Users/mac/Documents/projects/Bejamas/src/App.js":"2","/Users/mac/Documents/projects/Bejamas/src/reportWebVitals.js":"3","/Users/mac/Documents/projects/Bejamas/src/dataBase.js":"4","/Users/mac/Documents/projects/Bejamas/src/Context.js":"5","/Users/mac/Documents/projects/Bejamas/src/components/Header.js":"6","/Users/mac/Documents/projects/Bejamas/src/components/Products.js":"7","/Users/mac/Documents/projects/Bejamas/src/components/Hero.js":"8","/Users/mac/Documents/projects/Bejamas/src/components/ProductCard.js":"9","/Users/mac/Documents/projects/Bejamas/src/components/Checkboxes.js":"10"},{"size":500,"mtime":1636562178964,"results":"11","hashOfConfig":"12"},{"size":1087,"mtime":1636562178958,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1636562178965,"results":"14","hashOfConfig":"12"},{"size":6467,"mtime":1636826860707,"results":"15","hashOfConfig":"12"},{"size":74,"mtime":1636562178959,"results":"16","hashOfConfig":"12"},{"size":2449,"mtime":1636828139654,"results":"17","hashOfConfig":"12"},{"size":3442,"mtime":1636811881418,"results":"18","hashOfConfig":"12"},{"size":1838,"mtime":1636828086531,"results":"19","hashOfConfig":"12"},{"size":2389,"mtime":1636827992037,"results":"20","hashOfConfig":"12"},{"size":4874,"mtime":1636812835894,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"706pq",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},"/Users/mac/Documents/projects/Bejamas/src/index.js",[],["45","46"],"/Users/mac/Documents/projects/Bejamas/src/App.js",[],"/Users/mac/Documents/projects/Bejamas/src/reportWebVitals.js",[],"/Users/mac/Documents/projects/Bejamas/src/dataBase.js",[],"/Users/mac/Documents/projects/Bejamas/src/Context.js",[],"/Users/mac/Documents/projects/Bejamas/src/components/Header.js",[],"/Users/mac/Documents/projects/Bejamas/src/components/Products.js",["47"],"import \"../assets/scss/products.scss\";\nimport sort from \"../assets/images/Vector.svg\";\nimport arrow from \"../assets/images/Arrow.svg\";\nimport ProductCard from \"./ProductCard.js\";\nimport Checkboxes from \"./Checkboxes.js\";\nimport { useState, useContext, useEffect } from \"react\";\nimport { Context } from \"../Context.js\";\n\nconst Products = () => {\n  let [show, setShow] = useState(false);\n  const [, , , , page, setPage, pagination] = useContext(Context);\n  let [num, setNum] = useState(1);\n  let paginate = [...pagination({ arr: page, pageSize: 6, pageNumber: num })];\n  let [pag, setPag] = useState(paginate);\n  let numbers = Math.ceil(page.length / 6);\n  let [sortValue, setSortValue] = useState(null);\n\n  useEffect(() => {\n    let val = [...page];\n    if (sortValue === \"alphabetically\") {\n      val = val.sort((a, b) => (b.name < a.name ? 1 : -1));\n    } else if (sortValue === \"price\") {\n      val = val.sort((a, b) => (b.price > a.price ? 1 : -1));\n    }\n    setPage([...val]);\n    setPag([...pagination({ arr: [...val], pageSize: 6, pageNumber: num })]);\n  }, [sortValue, num]);\n\n  const showSorting = (e) => {\n    e.preventDefault();\n    setShow(() => !show);\n  };\n\n  return (\n    <section className=\"products\">\n      <div className=\"products__header\">\n        <h5>\n          Photography / <span>premium Photos</span>\n        </h5>\n        <button onClick={showSorting}>\n          <img className=\"sortImg\" src={sort} alt=\"sort icon\" />\n        </button>\n        <div className=\"sortByPrice\">\n          <span>\n            <img src={arrow} alt=\"sort by price or alphabet arrow\" />\n            Sort by\n          </span>\n          <select onChange={(e) => setSortValue(e.target.value)}>\n            <option value=\"\" hidden>\n              Select\n            </option>\n            <option value=\"price\">Price</option>\n            <option value=\"alphabetically\">Alphabetically</option>\n          </select>\n        </div>\n      </div>\n      <div className=\"products__list\">\n        <Checkboxes\n          show={show}\n          showSorting={showSorting}\n          pag={pag}\n          setPag={setPag}\n        />\n        <div className=\"products-card\">\n          {pag.length ? \"\" : <h1 className=\"no-result\">NO RESULT FOUND </h1>}\n          {pag.map((val, index) => (\n            <ProductCard key={index} index={index} val={val} />\n          ))}\n          {!pag.length ? (\n            \"\"\n          ) : (\n            <div className=\"pagination\">\n              <span\n                style={{\n                  color: num > 1 ? \"black\" : \"gray\",\n                }}\n                onClick={() => (num > 1 ? setNum(--num) : null)}\n              >\n                {\"<\"}\n              </span>\n              {[...Array(numbers)].map((val, i) => (\n                <span\n                  key={i}\n                  className=\"numbers\"\n                  style={{ color: num === i + 1 ? \"black\" : \"gray\" }}\n                  onClick={() => setNum(i + 1)}\n                >\n                  {i + 1}\n                </span>\n              ))}\n              <span\n                onClick={() =>\n                  num > 0 && num < numbers ? setNum(++num) : null\n                }\n                style={{\n                  color: num > 0 && num < numbers ? \"black\" : \"gray\",\n                }}\n              >\n                {\">\"}\n              </span>\n            </div>\n          )}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Products;\n","/Users/mac/Documents/projects/Bejamas/src/components/Hero.js",[],"/Users/mac/Documents/projects/Bejamas/src/components/ProductCard.js",[],"/Users/mac/Documents/projects/Bejamas/src/components/Checkboxes.js",["48"],"import \"../assets/scss/checkboxes.scss\";\nimport cancel from \"../assets/images/cancel.svg\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { Context } from \"../Context\";\n\nconst Products = ({ show, showSorting, setPag }) => {\n  const [state, , , , , setPage, pagination] = useContext(Context);\n\n  const checkboxes = [\n      \"people\",\n      \"premium\",\n      \"pets\",\n      \"food\",\n      \"landmarks\",\n      \"cities\",\n      \"nature\",\n    ],\n    radios = [\"lower than $20\", \"$20 - $100\", \"$100 - $200\", \"more than $200\"];\n\n  let [filters, setFilters] = useState({\n    people: false,\n    premium: false,\n    pets: false,\n    food: false,\n    landmarks: false,\n    cities: false,\n    nature: false,\n    price: false,\n  });\n\n  const changeFilter = (e) => {\n    setFilters({\n      ...filters,\n      [e.target.value]: e.target.checked,\n    });\n  };\n\n  const priceFilter = (e) => {\n    setFilters({\n      ...filters,\n      price: e.target.value,\n    });\n  };\n\n  const clearFilters = () => {\n    const filterItems = Object.keys(filters);\n    const stateObject = { ...filters };\n    for (let item of filterItems) {\n      stateObject[item] = false;\n    }\n    setFilters({\n      ...stateObject,\n    });\n  };\n\n  useEffect(() => {\n    let items = [...state],\n      i = 0,\n      newArr = [];\n\n    for (let val in filters) {\n      if (typeof filters[val] === \"boolean\" && filters[val]) {\n        const filteredItems = items.filter((item) => item.category === val);\n        newArr.push(...filteredItems);\n      }\n\n      if (!newArr.length && i === 7) {\n        // eslint-disable-next-line no-unused-vars\n        let filterCheck = Object.values(filters).some((value) => value === true)\n          ? null\n          : (newArr = [...state]);\n      }\n\n      if (filters[val].length > 5) {\n        let filteredItems;\n        switch (filters[val]) {\n          case \"lower than $20\":\n            filteredItems = newArr.filter((item) => item.price < 20);\n            newArr = [...filteredItems];\n\n            break;\n\n          case \"$20 - $100\":\n            filteredItems = newArr.filter(\n              (item) => item.price > 19 && item.price < 101\n            );\n            newArr = [...filteredItems];\n\n            break;\n\n          case \"$100 - $200\":\n            filteredItems = newArr.filter(\n              (item) => item.price > 99 && item.price < 201\n            );\n            newArr = [...filteredItems];\n\n            break;\n\n          case \"more than $200\":\n            filteredItems = newArr.filter((item) => item.price > 200);\n            newArr = [...filteredItems];\n\n            break;\n\n          default:\n        }\n      }\n\n      i++;\n\n      // if (!returnArr.length) returnArr = [...newArr];\n\n      // if (filters[val] && typeof filters[val] === \"boolean\") {\n      //   if (!newArr.length) newArr = [...state];\n\n      //   newArr.map((item) =>\n      //     item.category === val ? returnArr.push(item) : null\n      //   );\n      // }\n    }\n    setPage(newArr);\n    setPag([...pagination({ arr: newArr, pageSize: 6, pageNumber: 1 })]);\n  }, [\n    filters.people,\n    filters.premium,\n    filters.pets,\n    filters.food,\n    filters.landmarks,\n    filters.cities,\n    filters.nature,\n    filters.price,\n  ]);\n\n  return (\n    <aside className={`${show ? \"sidebar\" : \" sidebar hide\"}`}>\n      <div className=\"header\">\n        <h3>{window.innerWidth < 600 ? \"Filter\" : \"Categories\"}</h3>\n        {window.innerWidth < 600 ? (\n          <button onClick={showSorting}>\n            <img src={cancel} alt=\"cancel icon\" />\n          </button>\n        ) : (\n          \"\"\n        )}\n      </div>\n      <form className=\"categories\">\n        {checkboxes.map((val, i) => (\n          <label className=\"container\" key={i}>\n            {val}\n            <input\n              type=\"checkbox\"\n              id={i}\n              value={val}\n              onChange={(e) => changeFilter(e)}\n            />\n            <span className=\"checkmark\"></span>\n          </label>\n        ))}\n        <hr className=\"line\" />\n        <h3>Price range</h3>\n        <div className=\"radio\">\n          {radios.map((val, i) => (\n            <label className=\"container\" key={i}>\n              {val}\n              <input\n                type=\"radio\"\n                id={i}\n                value={val}\n                name=\"price\"\n                onChange={(e) => priceFilter(e)}\n              />\n              <span className=\"checkmark\"></span>\n            </label>\n          ))}\n        </div>\n        <div className=\"reset\">\n          <button\n            className=\"clear\"\n            onClick={(e) => {\n              showSorting(e);\n              clearFilters();\n            }}\n          >\n            Clear\n          </button>\n          <button className=\"save\" onClick={(e) => showSorting(e)}>\n            Save\n          </button>\n        </div>\n      </form>\n    </aside>\n  );\n};\n\nexport default Products;\n",{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":27,"column":6,"nodeType":"55","endLine":27,"endColumn":22,"suggestions":"56"},{"ruleId":"53","severity":1,"message":"57","line":123,"column":6,"nodeType":"55","endLine":132,"endColumn":4,"suggestions":"58"},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'page', 'pagination', and 'setPage'. Either include them or remove the dependency array.","ArrayExpression",["61"],"React Hook useEffect has missing dependencies: 'filters', 'pagination', 'setPag', 'setPage', and 'state'. Either include them or remove the dependency array. If 'setPag' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["62"],"no-global-assign","no-unsafe-negation",{"desc":"63","fix":"64"},{"desc":"65","fix":"66"},"Update the dependencies array to be: [sortValue, num, page, setPage, pagination]",{"range":"67","text":"68"},"Update the dependencies array to be: [filters.people, filters.premium, filters.pets, filters.food, filters.landmarks, filters.cities, filters.nature, filters.price, state, setPage, setPag, pagination, filters]",{"range":"69","text":"70"},[1065,1081],"[sortValue, num, page, setPage, pagination]",[3042,3206],"[filters.people, filters.premium, filters.pets, filters.food, filters.landmarks, filters.cities, filters.nature, filters.price, state, setPage, setPag, pagination, filters]"]